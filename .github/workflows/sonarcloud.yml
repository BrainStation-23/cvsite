name: Sonar Analysis
permissions:
  contents: read
  security-events: write  # needed to upload SARIF
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Read projectKey and optional host url from sonar-project.properties (no extra vars)
      - name: Extract Sonar settings
        id: sonar_vars
        shell: bash
        run: |
          PROJECT_KEY=$(grep -E '^[[:space:]]*sonar\.projectKey[[:space:]]*=' sonar-project.properties | sed 's/.*=//')
          HOST_URL=$(grep -E '^[[:space:]]*sonar\.host\.url[[:space:]]*=' sonar-project.properties | sed 's/.*=//' || true)
          if [ -z "$HOST_URL" ]; then HOST_URL="https://sonarcloud.io"; fi
          echo "project_key=$PROJECT_KEY" >> "$GITHUB_OUTPUT"
          echo "host_url=$HOST_URL" >> "$GITHUB_OUTPUT"

      # âœ… Correct way: install sonar-tools from PyPI
      - name: Install sonar-tools
        run: python3 -m pip install --upgrade pip && python3 -m pip install sonar-tools

      # Give Sonar a moment to index the just-completed analysis (helps avoid empty exports)
      - name: Wait briefly for indexing
        run: sleep 10

      - name: Export SARIF from Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ steps.sonar_vars.outputs.host_url }}
        run: |
          sonar-findings-export \
            -k "${{ steps.sonar_vars.outputs.project_key }}" \
            --types BUG,VULNERABILITY,SECURITY_HOTSPOT \
            --format sarif \
            -f sonar.sarif

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sonar.sarif

  
